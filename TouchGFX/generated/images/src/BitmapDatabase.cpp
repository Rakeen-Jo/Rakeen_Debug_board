// 4.16.1 0xcad01d56
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_background_circuit_white[]; // BITMAP_BACKGROUND_CIRCUIT_WHITE_ID = 0, Size: 390x259 pixels
extern const unsigned char image_btn_1[]; // BITMAP_BTN_1_ID = 1, Size: 183x46 pixels
extern const unsigned char image_btn_2[]; // BITMAP_BTN_2_ID = 2, Size: 183x46 pixels
extern const unsigned char image_btn_3[]; // BITMAP_BTN_3_ID = 3, Size: 183x46 pixels
extern const unsigned char image_btn_return[]; // BITMAP_BTN_RETURN_ID = 4, Size: 71x27 pixels
extern const unsigned char image_cat1[]; // BITMAP_CAT1_ID = 5, Size: 454x800 pixels
extern const unsigned char image_cat2[]; // BITMAP_CAT2_ID = 6, Size: 428x549 pixels
extern const unsigned char image_enter[]; // BITMAP_ENTER_ID = 7, Size: 860x711 pixels
extern const unsigned char image_icon_keyboard_even_row[]; // BITMAP_ICON_KEYBOARD_EVEN_ROW_ID = 8, Size: 47x28 pixels
extern const unsigned char image_icon_keyboard_highlighted[]; // BITMAP_ICON_KEYBOARD_HIGHLIGHTED_ID = 9, Size: 47x28 pixels
extern const unsigned char image_icon_keyboard_odd_row[]; // BITMAP_ICON_KEYBOARD_ODD_ROW_ID = 10, Size: 47x28 pixels
extern const unsigned char image_keyboard_background[]; // BITMAP_KEYBOARD_BACKGROUND_ID = 11, Size: 320x240 pixels
extern const unsigned char image_keyboard_key_delete_highlighted[]; // BITMAP_KEYBOARD_KEY_DELETE_HIGHLIGHTED_ID = 12, Size: 56x40 pixels
extern const unsigned char image_keyboard_key_highlighted[]; // BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID = 13, Size: 26x40 pixels
extern const unsigned char image_keyboard_key_num_highlighted[]; // BITMAP_KEYBOARD_KEY_NUM_HIGHLIGHTED_ID = 14, Size: 56x40 pixels
extern const unsigned char image_keyboard_key_shift_highlighted[]; // BITMAP_KEYBOARD_KEY_SHIFT_HIGHLIGHTED_ID = 15, Size: 56x40 pixels
extern const unsigned char image_keyboard_space_highlighted[]; // BITMAP_KEYBOARD_SPACE_HIGHLIGHTED_ID = 16, Size: 252x40 pixels
extern const unsigned char image_rounded_rectangle_scribble_banner_1[]; // BITMAP_ROUNDED_RECTANGLE_SCRIBBLE_BANNER_1_ID = 17, Size: 1566x949 pixels
extern const unsigned char image_rounded_rectangle_scribble_banner_2[]; // BITMAP_ROUNDED_RECTANGLE_SCRIBBLE_BANNER_2_ID = 18, Size: 1294x902 pixels
extern const unsigned char image_rounded_rectangle_scribble_banner_3[]; // BITMAP_ROUNDED_RECTANGLE_SCRIBBLE_BANNER_3_ID = 19, Size: 1493x944 pixels
extern const unsigned char image_rounded_rectangle_scribble_banner_4[]; // BITMAP_ROUNDED_RECTANGLE_SCRIBBLE_BANNER_4_ID = 20, Size: 1499x756 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_background_circuit_white, 0, 390, 259, 0, 0, 390, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 259, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_btn_1, 0, 183, 46, 0, 0, 183, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 46, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_btn_2, 0, 183, 46, 0, 0, 183, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 46, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_btn_3, 0, 183, 46, 0, 0, 183, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 46, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_btn_return, 0, 71, 27, 0, 0, 71, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 27, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_cat1, 0, 454, 800, 0, 0, 454, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 800, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_cat2, 0, 428, 549, 0, 0, 428, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 549, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_enter, 0, 860, 711, 0, 0, 860, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 711, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_icon_keyboard_even_row, 0, 47, 28, 0, 0, 47, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 28, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_icon_keyboard_highlighted, 0, 47, 28, 0, 0, 47, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 28, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_icon_keyboard_odd_row, 0, 47, 28, 0, 0, 47, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 28, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_background, 0, 320, 240, 0, 0, 320, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 240, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_delete_highlighted, 0, 56, 40, 0, 0, 56, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_highlighted, 0, 26, 40, 0, 0, 26, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_num_highlighted, 0, 56, 40, 0, 0, 56, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_shift_highlighted, 0, 56, 40, 0, 0, 56, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_space_highlighted, 0, 252, 40, 0, 0, 252, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_rounded_rectangle_scribble_banner_1, 0, 1566, 949, 518, 67, 322, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rounded_rectangle_scribble_banner_2, 0, 1294, 902, 680, 50, 222, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 21, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rounded_rectangle_scribble_banner_3, 0, 1493, 944, 861, 922, 224, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rounded_rectangle_scribble_banner_4, 0, 1499, 756, 345, 69, 1030, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
