/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef APPLICATIONFONTPROVIDER_HPP
#define APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
    class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId DEFAULT = 0;
    static const touchgfx::FontId LARGE = 1;
    static const touchgfx::FontId SMALL = 2;
    static const touchgfx::FontId TYPOGRAPHY_00 = 3;
    static const touchgfx::FontId DISPLAY = 4;
    static const touchgfx::FontId KEYBOARD = 5;
    static const touchgfx::FontId MODE = 6;
    static const touchgfx::FontId PIDTYPO = 7;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId DEFAULT = 0;       // FredokaOne_Regular_20_4bpp
    static const touchgfx::FontId LARGE = 1;         // FredokaOne_Regular_40_4bpp
    static const touchgfx::FontId SMALL = 2;         // FredokaOne_Regular_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // FredokaOne_Regular_15_4bpp
    static const touchgfx::FontId DISPLAY = 4;       // FredokaOne_Regular_28_4bpp
    static const touchgfx::FontId KEYBOARD = 0;      // FredokaOne_Regular_20_4bpp
    static const touchgfx::FontId MODE = 5;          // FredokaOne_Regular_24_4bpp
    static const touchgfx::FontId PIDTYPO = 0;       // FredokaOne_Regular_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 6;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* /* flashReader */) { }
    static touchgfx::FlashDataReader* getFlashReader() { return 0; }
};

#endif // APPLICATIONFONTPROVIDER_HPP
