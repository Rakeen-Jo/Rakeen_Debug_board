/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/ser_mon_screen/Ser_monViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Ser_monViewBase::Ser_monViewBase() :
    buttonCallback(this, &Ser_monViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Ser_monViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_CIRCUIT_WHITE_ID));
    scalableImage1.setPosition(0, 0, 480, 272);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    textArea1_1.setXY(7, 254);
    textArea1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));

    BTN_RETURN.setXY(7, 6);
    BTN_RETURN.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_RETURN_ID), touchgfx::Bitmap(BITMAP_BTN_RETURN_ID));
    BTN_RETURN.setLabelText(touchgfx::TypedText(T_SINGLEUSEID16));
    BTN_RETURN.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    BTN_RETURN.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    BTN_RETURN.setAction(buttonCallback);

    background_scroll.setPosition(7, 56, 467, 175);
    background_scroll.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    scrollableContainer1.setPosition(7, 56, 467, 175);
    scrollableContainer1.enableHorizontalScroll(false);
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    textAreaTerminal.setPosition(5, 3, 457, 391);
    textAreaTerminal.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaTerminal.setLinespacing(0);
    textAreaTerminalBuffer[0] = 0;
    textAreaTerminal.setWildcard(textAreaTerminalBuffer);
    textAreaTerminal.setTypedText(touchgfx::TypedText(T_SINGLEUSEID25));
    scrollableContainer1.add(textAreaTerminal);

    boxWithBorder1.setPosition(7, 39, 467, 17);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(1);

    BTN_TEXTBOX.setBoxWithBorderPosition(0, 0, 439, 17);
    BTN_TEXTBOX.setBorderSize(1);
    BTN_TEXTBOX.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    BTN_TEXTBOX.setPosition(7, 39, 439, 17);
    BTN_TEXTBOX.setAction(flexButtonCallback);

    textAreaInputbox.setPosition(11, 41, 424, 15);
    textAreaInputbox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textAreaInputbox.setLinespacing(0);
    Unicode::snprintf(textAreaInputboxBuffer, TEXTAREAINPUTBOX_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID34).getText());
    textAreaInputbox.setWildcard(textAreaInputboxBuffer);
    textAreaInputbox.setTypedText(touchgfx::TypedText(T_SINGLEUSEID32));

    BTN_PORT.setXY(403, 238);
    BTN_PORT.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_RETURN_ID), touchgfx::Bitmap(BITMAP_BTN_RETURN_ID));
    BTN_PORT.setLabelText(touchgfx::TypedText(T_SINGLEUSEID26));
    BTN_PORT.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    BTN_PORT.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    BTN_CLEAR.setXY(326, 238);
    BTN_CLEAR.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_RETURN_ID), touchgfx::Bitmap(BITMAP_BTN_RETURN_ID));
    BTN_CLEAR.setLabelText(touchgfx::TypedText(T_SINGLEUSEID27));
    BTN_CLEAR.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    BTN_CLEAR.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    BTN_CLEAR.setAction(buttonCallback);

    BTN_INPUT.setBoxWithBorderPosition(0, 0, 29, 17);
    BTN_INPUT.setBorderSize(1);
    BTN_INPUT.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    BTN_INPUT.setPosition(445, 39, 29, 17);
    BTN_INPUT.setAction(flexButtonCallback);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_ENTER_ID));
    scalableImage2.setPosition(451, 40, 17, 15);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    add(__background);
    add(scalableImage1);
    add(textArea1_1);
    add(BTN_RETURN);
    add(background_scroll);
    add(scrollableContainer1);
    add(boxWithBorder1);
    add(BTN_TEXTBOX);
    add(textAreaInputbox);
    add(BTN_PORT);
    add(BTN_CLEAR);
    add(BTN_INPUT);
    add(scalableImage2);
}

void Ser_monViewBase::setupScreen()
{

}

void Ser_monViewBase::keyboardSelectedVar(uint8_t value)
{
    //KeyboardSelected
    //When keyboardSelectedVar is called call virtual function
    //Call KeyboardSelected
    KeyboardSelected(value);

    //gotoCKeyboardScreen
    //When KeyboardSelected completed change screen to CKeyboardScreen
    //Go to CKeyboardScreen with screen transition towards East
    application().gotoCKeyboardScreenScreenSlideTransitionEast();
}

void Ser_monViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &BTN_RETURN)
    {
        //Interaction1
        //When BTN_RETURN clicked change screen to Main
        //Go to Main with screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
    else if (&src == &BTN_CLEAR)
    {
        //Clear_buffer
        //When BTN_CLEAR clicked call virtual function
        //Call Clear_buffer
        Clear_buffer();
    }
}

void Ser_monViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &BTN_TEXTBOX)
    {
        //BTN_TEXTBOX_Pressed
        //When BTN_TEXTBOX clicked call keyboardSelectedVar on Ser_mon
        //Call keyboardSelectedVar
        keyboardSelectedVar(0);
    }
    else if (&src == &BTN_INPUT)
    {
        //InputText
        //When BTN_INPUT clicked call virtual function
        //Call InputText
        InputText();
    }
}
